diff a/Assets/Script/Suzumura/PlayerController.cs b/Assets/Script/Suzumura/PlayerController.cs	(rejected hunks)
@@ -6,16 +6,18 @@
 {
     Rigidbody2D rb;
     float buoyancy;
-
-    readonly float clampMinX = -5.0f;
-    readonly float clampMaxX = 5.0f;
-    readonly float clampMinY = -200.0f;
-    readonly float clampMaxY = 200.0f;
+    float clampMinX = -5.0f;
+    float clampMaxX = 5.0f;
+    float clampMinY = -200.0f;
+    float clampMaxY = 200.0f;
 
     Vector2 PlayerPos;
     Vector2 ViewportLB;     // ����
     Vector2 ViewportRT;     // �E��
 
+    bool dashflug = false;
+    int dashcount = 0;
+
     // Start is called before the first frame update
     void Start()
     {
@@ -33,16 +35,38 @@
     // Update is called once per frame
     void Update()
     {
+        float dash = 10.0f;
+        if (Input.GetKeyDown("b"))  // �_�b�V��
+        {
+            dashflug = true;
+            dash = 1000.0f;
+            clampMinX = -60.0f;     // ���x�̏�����
+            clampMaxX = 60.0f;      // ���x�̉������
+            dashcount = 100;
+        }
+
+        // ���t���[����Ƀ_�b�V����ԉ��
+        dashcount--;
+        if (dashcount <= 0)
+        {
+            dashcount = 0;
+            // ���ɖ߂�
+            dashflug = false;
+            dash = 10.0f;
+            clampMinX = -5.0f;
+            clampMaxX = 5.0f;
+        }
+
         // ���͂�x�ɑ��
         float x = Input.GetAxis("Horizontal");
 
         //x���ɉ����͂�i�[
-        Vector2 force = new Vector2(x * 10, 0);
+        Vector2 force = new Vector2(x * dash, 0);
 
         // �W�����v����
         if (Input.GetKeyDown("space"))
         {
-            force = new Vector2(x * 10, buoyancy);
+            force = new Vector2(x * dash, buoyancy);
         }
 
         // ��ʊO����
